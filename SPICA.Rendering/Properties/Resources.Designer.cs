//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPICA.Rendering.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SPICA.Rendering.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на //SPICA auto-generated code
        /////This code was translated from a MAESTRO Vertex Shader
        /////This file was also hand modified to improve compatibility
        ///#version 330 core
        ///
        ///uniform vec4 WrldMtx[3];
        ///uniform vec4 NormMtx[3];
        ///uniform vec4 PosOffs;
        ///uniform vec4 IrScale[2];
        ///uniform vec4 TexcMap;
        ///uniform vec4 TexMtx0[3];
        ///uniform vec4 TexMtx1[3];
        ///uniform vec4 TexMtx2[2];
        ///uniform vec4 TexTran;
        ///uniform vec4 MatAmbi;
        ///uniform vec4 MatDiff;
        ///uniform vec4 HslGCol;
        ///uniform vec4 HslSCol;
        ///uniform vec4 HslSDir;
        ///unif [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string DefaultVertexShader {
            get {
                return ResourceManager.GetString("DefaultVertexShader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на #version 150
        ///
        ///uniform sampler2D LUTs[6];
        ///
        ///uniform sampler2D Textures[3];
        ///
        ///uniform sampler2D LightDistanceLUT[3];
        ///
        ///uniform sampler2D LightAngleLUT[3];
        ///
        ///uniform samplerCube TextureCube;
        ///
        ///struct Light_t {
        ///	vec3 Position;
        ///	vec3 Direction;
        ///	vec4 Ambient;
        ///	vec4 Diffuse;
        ///	vec4 Specular0;
        ///	vec4 Specular1;
        ///	float AttScale;
        ///	float AttBias;
        ///	float AngleLUTScale;
        ///	int AngleLUTInput;
        ///	int SpotAttEnb;
        ///	int DistAttEnb;
        ///	int TwoSidedDiff;
        ///	int Directional;
        ///};
        ///
        ///uniform int LightsCount;
        ///
        ///unifor [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FragmentShaderBase {
            get {
                return ResourceManager.GetString("FragmentShaderBase", resourceCulture);
            }
        }
    }
}
